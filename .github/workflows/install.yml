name: Install GitHub Runners

on:
  workflow_dispatch:

concurrency: install

jobs:
  Install:
    runs-on: ubuntu-latest
    environment: GHA
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.GHA_AWS_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to EKS cluster
        run: aws eks update-kubeconfig --name github_runners

      - name: Install NGINX ingress
        env:
          NGINX_INGRESS_VERSION: 4.8.0
        run: |
          helm upgrade --install ingress-nginx ingress-nginx \
            --repo https://kubernetes.github.io/ingress-nginx \
            --version ${{ env.NGINX_INGRESS_VERSION }} \
            -n ingress-nginx --create-namespace \
            -f ingress/nginx.yaml \
            --wait

      - name: Install Argo CD
        env:
          ARGO_CD_VERSION: 5.46.7
        run: |
          helm upgrade --install argo-cd \ 
            oci://ghcr.io/argoproj/argo-helm/argo-cd \
            --version ${{ env.ARGO_CD_VERSION }} \
            -n argocd --create-namespace \
            -f argo-cd/values.yaml \
            --set configs.credentialTemplates.github.password=${{ secrets.GH_TOKEN }}
            --wait

      - name: Install ARC
        run: |
          helm upgrade --install arc argocd-apps \
            --repo https://argoproj.github.io/argo-helm \
            -n argocd --create-namespace \
            -f argo-cd/applications/arc.yaml \
            --wait
          
          kubectl create ns arc-runners --save-config --dry-run=client -o yaml | kubectl apply --wait -f -
          
          kubectl create secret docker-registry github-registry \
            -n arc-runners \
            --docker-server=ghcr.io \
            --docker-username=${{ github.repository_owner }} \
            --docker-password=${{ secrets.GH_PACKAGES_TOKEN }} \
            --save-config --dry-run=client -o yaml | kubectl apply --wait -f -
          
          kubectl create secret generic github-app \
            -n arc-runners \
            --from-literal=github_app_id=${{ secrets.RUNNER_APP_ID }} \
            --from-literal=github_app_installation_id=${{ secrets.RUNNER_APP_INSTALLATION_ID }} \
            --from-literal=github_app_private_key="${{ secrets.RUNNER_APP_PRIVATE_KEY }}" \
            --save-config --dry-run=client -o yaml | kubectl apply -f -
          
          helm upgrade --install runners argocd-apps \
            --repo https://argoproj.github.io/argo-helm \
            -n argocd --create-namespace \
            -f argo-cd/applications/runners.yaml \
            --wait
